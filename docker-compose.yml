version: '3.8'  # Указываем версию Docker Compose

services:
  web:
    image: webapplication1  # Имя образа для вашего приложения
    build:
      context: ./WebApplication1  # Указываем папку с Dockerfile
      dockerfile: Dockerfile  # Указываем путь к Dockerfile
    ports:
      - "5000:80"  # Пробрасываем порт 80 контейнера на порт 5000 хоста
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=mathdb_lg7k;Username=mathdb_lg7k_user;Password=RkNo3LAN7nH1dq375yYYBVQxWlVotqWc
    depends_on:
      - db  # Указываем, что контейнер web зависит от контейнера db
    command: >
      powershell -Command "while (!(Test-NetConnection db -Port 5432).TcpTestSucceeded) { Start-Sleep -Seconds 1 } &&
      dotnet ef database update &&
      dotnet WebApplication1.dll"

  db:
    image: postgres:16  # Образ PostgreSQL
    environment:
      POSTGRES_DB: mathdb_lg7k  # Имя базы данных
      POSTGRES_USER: mathdb_lg7k_user  # Имя пользователя
      POSTGRES_PASSWORD: RkNo3LAN7nH1dq375yYYBVQxWlVotqWc  # Пароль для пользователя
    ports:
      - "5432:5432"  # Пробрасываем порт PostgreSQL
    volumes:
      - pg_data:/var/lib/postgresql/data  # Сохраняем данные базы данных в томе

volumes:
  pg_data:  # Том для хранения данных PostgreSQL